services:
  db:
    image: postgres:15-alpine
    container_name: lush_moments_db
    environment:
      POSTGRES_DB: lush_moments
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432
    networks:
      - lush_moments_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  redis:
    image: redis:alpine
    container_name: lush_moments_redis
    ports:
      - 6379
    volumes:
      - redis_data:/data
    networks:
      - lush_moments_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  app:
    build: .
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    container_name: lush_moments_app
    ports:
      - 8000
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@db/lush_moments
      REDIS_URL: redis://redis:6379
      SECRET_KEY: ${SECRET_KEY:-change-this-in-production}
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      ADMIN_EMAIL: admin@example.com
      ADMIN_PASSWORD: admin123
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
    networks:
      - lush_moments_network
    restart: unless-stopped


volumes:
  postgres_data:
  redis_data:

networks:
  lush_moments_network:
    driver: bridge